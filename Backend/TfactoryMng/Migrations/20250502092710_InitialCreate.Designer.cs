// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TfactoryMng.Data;

#nullable disable

namespace TfactoryMng.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250502092710_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TfactoryMng.Model.RtList", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("collectorId")
                        .HasColumnType("int");

                    b.Property<string>("distance")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("endLocation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("rName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("startLocation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("vehicleId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("rName")
                        .IsUnique();

                    b.ToTable("RtLists");
                });

            modelBuilder.Entity("TfactoryMng.Model.TransportCost", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal>("costPerKM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("rName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("totalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("totalDistanceKM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("transporterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("rName");

                    b.ToTable("TransportCosts");
                });

            modelBuilder.Entity("TfactoryMng.Model.TransportPerformance", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("arrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isOnTime")
                        .HasColumnType("bit");

                    b.Property<string>("rName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("scheduledTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("transporterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vehicleNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("rName");

                    b.ToTable("TransportPerformances");
                });

            modelBuilder.Entity("TfactoryMng.Model.YieldList", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("collected_Yield")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("collectorID")
                        .HasColumnType("int");

                    b.Property<string>("golden_Tips_Present")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("rName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("vehicalID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("rName");

                    b.ToTable("YieldLists");
                });

            modelBuilder.Entity("TfactoryMng.Model.TransportCost", b =>
                {
                    b.HasOne("TfactoryMng.Model.RtList", "RtList")
                        .WithMany("TransportCosts")
                        .HasForeignKey("rName")
                        .HasPrincipalKey("rName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RtList");
                });

            modelBuilder.Entity("TfactoryMng.Model.TransportPerformance", b =>
                {
                    b.HasOne("TfactoryMng.Model.RtList", "RtList")
                        .WithMany("TransportPerformances")
                        .HasForeignKey("rName")
                        .HasPrincipalKey("rName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RtList");
                });

            modelBuilder.Entity("TfactoryMng.Model.YieldList", b =>
                {
                    b.HasOne("TfactoryMng.Model.RtList", "RtList")
                        .WithMany("YieldLists")
                        .HasForeignKey("rName")
                        .HasPrincipalKey("rName")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RtList");
                });

            modelBuilder.Entity("TfactoryMng.Model.RtList", b =>
                {
                    b.Navigation("TransportCosts");

                    b.Navigation("TransportPerformances");

                    b.Navigation("YieldLists");
                });
#pragma warning restore 612, 618
        }
    }
}
