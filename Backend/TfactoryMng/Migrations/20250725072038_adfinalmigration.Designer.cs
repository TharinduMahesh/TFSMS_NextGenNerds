// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TfactoryMng.Data;

#nullable disable

namespace TfactoryMng.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250725072038_adfinalmigration")]
    partial class adfinalmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RtList", b =>
                {
                    b.Property<int>("rId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rId"));

                    b.Property<int?>("CollectorId")
                        .HasColumnType("int");

                    b.Property<int?>("distance")
                        .HasColumnType("int");

                    b.Property<string>("endLocation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("rName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("startLocation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("rId");

                    b.HasIndex("CollectorId");

                    b.HasIndex("rName")
                        .IsUnique();

                    b.ToTable("RtLists");
                });

            modelBuilder.Entity("TfactoryMng.Model.Collector", b =>
                {
                    b.Property<int>("CollectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CollectorId"));

                    b.Property<string>("CollectorAddressLine1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CollectorAddressLine2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CollectorCity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CollectorDOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("CollectorEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CollectorGender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CollectorNIC")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CollectorPhoneNum")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CollectorPostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("RatePerKm")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CollectorId");

                    b.ToTable("Collectors");
                });

            modelBuilder.Entity("TfactoryMng.Model.GrowerLocation", b =>
                {
                    b.Property<int>("gId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("gId"));

                    b.Property<int>("RtListId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("latitude")
                        .HasColumnType("float");

                    b.Property<double>("longitude")
                        .HasColumnType("float");

                    b.HasKey("gId");

                    b.HasIndex("RtListId");

                    b.ToTable("GrowerLocations");
                });

            modelBuilder.Entity("TfactoryMng.Model.TripRecord", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripId"));

                    b.Property<DateTime?>("ActualArrival")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActualDeparture")
                        .HasColumnType("datetime2");

                    b.Property<int>("CollectorId")
                        .HasColumnType("int");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ScheduledArrival")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ScheduledDeparture")
                        .HasColumnType("datetime2");

                    b.HasKey("TripId");

                    b.HasIndex("CollectorId");

                    b.HasIndex("RouteId");

                    b.ToTable("TripRecords");
                });

            modelBuilder.Entity("TfactoryMng.Model.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<int>("CollectorId")
                        .HasColumnType("int");

                    b.Property<string>("ConditionNotes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Volume")
                        .HasColumnType("decimal(18, 3)");

                    b.HasKey("VehicleId");

                    b.HasIndex("CollectorId")
                        .IsUnique();

                    b.HasIndex("LicensePlate")
                        .IsUnique();

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("TfactoryMng.Model.YieldList", b =>
                {
                    b.Property<int>("yId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("yId"));

                    b.Property<string>("collected_Yield")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("golden_Tips_Present")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("rId")
                        .HasColumnType("int");

                    b.HasKey("yId");

                    b.HasIndex("rId");

                    b.ToTable("YieldLists");
                });

            modelBuilder.Entity("RtList", b =>
                {
                    b.HasOne("TfactoryMng.Model.Collector", "Collector")
                        .WithMany("Routes")
                        .HasForeignKey("CollectorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Collector");
                });

            modelBuilder.Entity("TfactoryMng.Model.GrowerLocation", b =>
                {
                    b.HasOne("RtList", "RtList")
                        .WithMany("GrowerLocations")
                        .HasForeignKey("RtListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RtList");
                });

            modelBuilder.Entity("TfactoryMng.Model.TripRecord", b =>
                {
                    b.HasOne("TfactoryMng.Model.Collector", "Collector")
                        .WithMany("TripRecords")
                        .HasForeignKey("CollectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RtList", "Route")
                        .WithMany("TripRecords")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collector");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("TfactoryMng.Model.Vehicle", b =>
                {
                    b.HasOne("TfactoryMng.Model.Collector", "Collector")
                        .WithOne("Vehicle")
                        .HasForeignKey("TfactoryMng.Model.Vehicle", "CollectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collector");
                });

            modelBuilder.Entity("TfactoryMng.Model.YieldList", b =>
                {
                    b.HasOne("RtList", "RtList")
                        .WithMany()
                        .HasForeignKey("rId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RtList");
                });

            modelBuilder.Entity("RtList", b =>
                {
                    b.Navigation("GrowerLocations");

                    b.Navigation("TripRecords");
                });

            modelBuilder.Entity("TfactoryMng.Model.Collector", b =>
                {
                    b.Navigation("Routes");

                    b.Navigation("TripRecords");

                    b.Navigation("Vehicle");
                });
#pragma warning restore 612, 618
        }
    }
}
